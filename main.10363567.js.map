{"version":3,"sources":["scripts/main.js"],"names":["scoreCount","field","startBtn","document","querySelector","score","gameField","messageLose","messageWin","messageStart","CELLS_IN_ROW","startGame","classList","add","remove","innerHTML","createCell","hasEmptyTile","randomRow","Math","floor","random","randomCol","numb","renderCells","i","includes","r","c","currentCell","rows","cells","num","innerText","value","replace","loseTheGame","removeEmptyTiles","row","filter","slide","newRow","length","push","slideLeft","slideRight","reverse","slideUp","column","slideDown","canSlideLeft","canSlideRight","canSlideUp","canSlideDown","addEventListener","e","preventDefault","code"],"mappings":"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","file":"main.10363567.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst startBtn = document.querySelector('.start');\nconst score = document.querySelector('.game-score');\nconst gameField = document.querySelector('.game-field');\nconst messageLose = document.querySelector('.message-lose');\nconst messageWin = document.querySelector('.message-win');\nconst messageStart = document.querySelector('.message-start');\n\nconst CELLS_IN_ROW = 4;\nlet scoreCount;\nlet field;\n\nstartBtn.addEventListener('click', startGame);\n\nfunction startGame() {\n  scoreCount = 0;\n\n  field = [\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n  ];\n\n  messageStart.classList.add('hidden');\n  messageLose.classList.add('hidden');\n  messageWin.classList.add('hidden');\n  startBtn.classList.remove('start');\n  startBtn.classList.add('restart');\n  startBtn.innerHTML = 'Restart';\n  score.innerHTML = scoreCount;\n\n  createCell();\n  createCell();\n}\n\nfunction createCell() {\n  while (hasEmptyTile()) {\n    const randomRow = Math.floor((Math.random() * CELLS_IN_ROW));\n    const randomCol = Math.floor((Math.random() * CELLS_IN_ROW));\n\n    if (field[randomRow][randomCol] === 0) {\n      const numb = Math.random() < 0.9 ? 2 : 4;\n\n      field[randomRow][randomCol] = numb;\n      break;\n    }\n  }\n\n  renderCells();\n}\n\nfunction hasEmptyTile() {\n  for (let i = 0; i < CELLS_IN_ROW; i++) {\n    if (field[i].includes(0)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction renderCells() {\n  for (let r = 0; r < CELLS_IN_ROW; r++) {\n    for (let c = 0; c < CELLS_IN_ROW; c++) {\n      const currentCell = gameField.rows[r].cells[c];\n      const num = field[r][c];\n\n      currentCell.innerText = '';\n      currentCell.classList.value = '';\n      currentCell.classList.add('field-cell');\n\n      if (num > 0) {\n        currentCell.innerText = num;\n        currentCell.classList.add(`field-cell--${num}`);\n      }\n\n      if (num === 2048) {\n        messageWin.classList.remove('hidden');\n        startBtn.classList.replace('restart', 'start');\n      }\n    }\n  }\n\n  if (loseTheGame()) {\n    messageLose.classList.remove('hidden');\n  }\n}\n\nfunction loseTheGame() {\n  if (hasEmptyTile()) {\n    return false;\n  }\n\n  for (let r = 0; r < CELLS_IN_ROW; r++) {\n    for (let c = 0; c < CELLS_IN_ROW; c++) {\n      if (field[r][c] === field[r][c + 1]) {\n        return false;\n      }\n    }\n  }\n\n  for (let r = 0; r < CELLS_IN_ROW - 1; r++) {\n    for (let c = 0; c < CELLS_IN_ROW; c++) {\n      if (field[r][c] === field[r + 1][c]) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n\nfunction removeEmptyTiles(row) {\n  return row.filter(num => num !== 0);\n}\n\nfunction slide(row) {\n  let newRow = removeEmptyTiles(row);\n\n  for (let i = 0; i < newRow.length - 1; i++) {\n    if (newRow[i] === newRow[i + 1]) {\n      newRow[i] *= 2;\n      newRow[i + 1] = 0;\n      scoreCount += newRow[i];\n\n      score.innerText = scoreCount;\n    }\n  }\n\n  newRow = removeEmptyTiles(newRow);\n\n  while (newRow.length < CELLS_IN_ROW) {\n    newRow.push(0);\n  }\n\n  return newRow;\n}\n\nfunction slideLeft() {\n  for (let r = 0; r < CELLS_IN_ROW; r++) {\n    let row = field[r];\n\n    row = slide(row);\n    field[r] = row;\n  }\n}\n\nfunction slideRight() {\n  for (let r = 0; r < CELLS_IN_ROW; r++) {\n    let row = field[r].reverse();\n\n    row = slide(row).reverse();\n    field[r] = row;\n  }\n}\n\nfunction slideUp() {\n  for (let c = 0; c < CELLS_IN_ROW; c++) {\n    let column = [field[0][c], field[1][c], field[2][c], field[3][c]];\n\n    column = slide(column);\n\n    for (let r = 0; r < CELLS_IN_ROW; r++) {\n      field[r][c] = column[r];\n    }\n  }\n}\n\nfunction slideDown() {\n  for (let c = 0; c < CELLS_IN_ROW; c++) {\n    let column = [field[0][c], field[1][c], field[2][c], field[3][c]].reverse();\n\n    column = slide(column).reverse();\n\n    for (let r = 0; r < CELLS_IN_ROW; r++) {\n      field[r][c] = column[r];\n    }\n  }\n}\n\ndocument.addEventListener('keydown', (e) => {\n  e.preventDefault();\n\n  switch (e.code) {\n    case 'ArrowLeft':\n      if (canSlideLeft()) {\n        slideLeft();\n        createCell();\n      }\n      break;\n\n    case 'ArrowRight':\n      if (canSlideRight()) {\n        slideRight();\n        createCell();\n      }\n      break;\n\n    case 'ArrowUp':\n      if (canSlideUp()) {\n        slideUp();\n        createCell();\n      }\n      break;\n\n    case 'ArrowDown':\n      if (canSlideDown()) {\n        slideDown();\n        createCell();\n      }\n      break;\n  }\n\n  renderCells();\n});\n\nfunction canSlideLeft() {\n  for (let r = 0; r < CELLS_IN_ROW; r++) {\n    for (let c = 1; c < CELLS_IN_ROW; c++) {\n      if (field[r][c] !== 0 && (field[r][c - 1] === 0\n          || field[r][c - 1] === field[r][c])) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n\nfunction canSlideRight() {\n  for (let r = 0; r < CELLS_IN_ROW; r++) {\n    for (let c = CELLS_IN_ROW - 2; c >= 0; c--) {\n      if (field[r][c] !== 0 && (field[r][c + 1]\n          === 0 || field[r][c + 1] === field[r][c])) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n\nfunction canSlideUp() {\n  for (let c = 0; c < CELLS_IN_ROW; c++) {\n    for (let r = 1; r < CELLS_IN_ROW; r++) {\n      if (field[r][c] !== 0 && (field[r - 1][c]\n          === 0 || field[r - 1][c] === field[r][c])) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n\nfunction canSlideDown() {\n  for (let c = 0; c < CELLS_IN_ROW; c++) {\n    for (let r = CELLS_IN_ROW - 2; r >= 0; r--) {\n      if (field[r][c] !== 0 && (field[r + 1][c]\n          === 0 || field[r + 1][c] === field[r][c])) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n"]}